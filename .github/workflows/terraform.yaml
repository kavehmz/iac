name: 'Terraform'

on:
  push:
    paths:
      - .github/workflows/*
      - provision/*
    branches:
    - master
  pull_request:
    paths:
      - .github/workflows/*
      - provision/*

defaults:
  run:
    shell: bash
    # working-directory: ./provision

jobs:
  diffs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "matrix={\"dir\":[\"aws/personal/project_a\",\"aws/personal/project_b\"]}" >> $GITHUB_OUTPUT

  terraform:
    needs: diffs
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    # strategy:
    #   # matrix: ${{fromJSON('{"dir":["aws/personal/project_a","aws/personal/project_b"]}')}}
    #   matrix: ${{fromJson(needs.diffs.outputs.matrix)}}

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: test
      id: test
      run: echo "${{ needs.diffs.outputs.matrix }}"

    - name: Terraform fmt
      id: fmt
      working-directory: ${{ matrix.dir }}
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      working-directory: ${{ matrix.dir }}
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Validate
      id: validate
      working-directory: ${{ matrix.dir }}
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      working-directory: ${{ matrix.dir }}
      run: terraform plan -no-color
      continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
